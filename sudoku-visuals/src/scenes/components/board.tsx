import { Node, NodeProps, Rect, Txt } from "@motion-canvas/2d";
import { SubGrid } from "./tile";

const subGridGap = 12;

interface BoardProps extends NodeProps {
  initialState?: number[][];
}

export class SudokuBoard extends Node {
  initialState?: number[][];

  public constructor(props?: BoardProps) {
    super(props);

    this.initialState = props?.initialState || [
      [6, 9, 0, 1, 7, 0, 0, 0, 0],
      [3, 5, 0, 0, 4, 0, 1, 0, 0],
      [8, 0, 2, 3, 6, 0, 7, 0, 4],
      [0, 0, 0, 0, 0, 0, 9, 0, 8],
      [9, 4, 0, 0, 0, 0, 0, 0, 5],
      [0, 0, 0, 5, 9, 0, 6, 3, 0],
      [2, 6, 0, 0, 5, 0, 0, 8, 7],
      [0, 8, 1, 0, 0, 6, 4, 9, 0],
      [0, 7, 3, 0, 8, 2, 0, 1, 0],
    ];

    const subGrids = getSubGrids(this.initialState);

    this.add(
      <Rect
        layout
        alignItems={"center"}
        justifyContent={"center"}
        direction={"column"}
        gap={subGridGap}
      >
        <Rect direction={"row"} gap={subGridGap}>
          {[0, 1, 2].map((n) => (
            <SubGrid subGrid={subGrids[n]} />
          ))}
        </Rect>
        <Rect direction={"row"} gap={subGridGap}>
          {[3, 4, 5].map((n) => (
            <SubGrid subGrid={subGrids[n]} />
          ))}
        </Rect>
        <Rect direction={"row"} gap={subGridGap}>
          {[6, 7, 8].map((n) => (
            <SubGrid subGrid={subGrids[n]} />
          ))}
        </Rect>
      </Rect>
    );
  }
}

const getSubGrids = (array: number[][]) => {
  // generated by chatgpt, pls double check
  const subgrids: number[][][] = [];
  for (let gridRow = 0; gridRow < 3; gridRow++) {
    for (let gridCol = 0; gridCol < 3; gridCol++) {
      const subgrid: number[][] = [];
      for (let row = gridRow * 3; row < gridRow * 3 + 3; row++) {
        subgrid.push(array[row].slice(gridCol * 3, gridCol * 3 + 3));
      }
      subgrids.push(subgrid);
    }
  }
  return subgrids;
};
